import { ChainableElement } from '../../common/types';
import { OperatorUser } from '../helpers';
import TotpModal from './totp-modal-component';

export default class ExploitSpListPage {
  getCreateSpButton(): ChainableElement {
    return cy.contains('a', 'Créer un fournisseur de service');
  }

  getSpRow(spName: string): ChainableElement {
    return cy.contains('#list-table tr', spName, { matchCase: false });
  }

  getSearchInput(): ChainableElement {
    return cy.get('#searchInput');
  }

  getSearchButton(): ChainableElement {
    return cy.get('#searchBtn');
  }

  searchSp(spName: string): void {
    this.getSearchInput().clear().type(spName);
    this.getSearchButton().click();
  }

  getSpClientId(spName: string): Cypress.Chainable<string> {
    // clientId is in the first td element
    return this.getSpRow(spName)
      .children('td')
      .first()
      .invoke('text')
      .then((text) => text.trim());
  }

  navigateToUpdateSpPage(spName: string): void {
    this.searchSp(spName);
    this.getSpRow(spName).find('a.btn-action-update').click();
  }

  deleteSp(spName: string, user: OperatorUser): void {
    this.searchSp(spName);
    this.getSpRow(spName).find('button.btn-action-delete').click();
    const totpModal = new TotpModal();
    totpModal.submitTotp(user);
  }

  deleteAllSpStartingWith(spNamePrefix: string, user: OperatorUser): void {
    this.searchSp(spNamePrefix);
    cy.get(
      `input[type="checkbox"][data-element-title^="${spNamePrefix}"]`,
    ).check();
    cy.get('[data-init="submitDeletion"]').click();
    const totpModal = new TotpModal();
    totpModal.submitTotp(user);
  }

  checkConfirmSuccessMessage(): void {
    cy.get('#successBanner').should('exist');
  }

  checkConfirmUpdateMessage(spName: string): void {
    cy.get('#successBanner')
      .should('exist')
      .contains(
        `Le fournisseur de service ${spName} a été modifié avec succès !`,
      );
  }

  checkConfirmDeleteMessage(spName: string): void {
    cy.get('#successBanner')
      .should('exist')
      .contains(
        `Le fournisseur de service ${spName} a été supprimé avec succès !`,
      );
  }

  checkConfirmCreateMessage(spName: string): void {
    cy.get('#successBanner')
      .should('exist')
      .contains(`Le fournisseur de service ${spName} a été créé avec succès !`);
  }
}
