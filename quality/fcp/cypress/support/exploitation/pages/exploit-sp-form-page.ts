import { ChainableElement } from '../../common/types';
import ExploitFormPage from './exploit-form-page';

const EIDAS_INPUT_NAME = 'eidas';
const IDP_FILTER_LIST_INPUT_NAME = 'idpFilterList';
export default class ExploitSpFormPage extends ExploitFormPage {
  protected getAllFormInputs(): ChainableElement {
    return cy.get(
      '#fs-form input[type="text"], #fs-form input[type="checkbox"], #fs-form input[name="platform"], #fs-form textarea, #fs-form select',
    );
  }

  protected getValidationButton(): ChainableElement {
    return cy.get("#fs-form button[type='submit']");
  }

  fillDefaultValues(configValues: Record<string, string | string[]>): void {
    // Start with setting the eIDAS level to show all form inputs
    const eidasValue = configValues[EIDAS_INPUT_NAME];
    if (eidasValue) {
      this.fillValue(EIDAS_INPUT_NAME, configValues[EIDAS_INPUT_NAME]);
    }
    super.fillDefaultValues(configValues);
  }

  checkHasIdpFilterListValues(values: string[]): void {
    super.checkHasCheckboxValues(IDP_FILTER_LIST_INPUT_NAME, values);
  }

  checkIsIdpFilterListDisabled(isDisabled: boolean): void {
    super.checkAreCheckboxesDisabled(IDP_FILTER_LIST_INPUT_NAME, isDisabled);
  }

  fillIdpFilterListValues(values: string[]): void {
    super.fillValue(IDP_FILTER_LIST_INPUT_NAME, values);
  }
}
