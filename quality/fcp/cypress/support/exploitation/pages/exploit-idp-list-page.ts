import { ChainableElement } from '../../common/types';
import { OperatorUser } from '../helpers';
import TotpModal from './totp-modal-component';

export default class ExploitIdpListPage {
  getCreateIdpButton(): ChainableElement {
    return cy.contains("Créer un fournisseur d'identité");
  }

  getIdpRow(idpName: string): ChainableElement {
    return cy.get(`tr[data-idp-name='${idpName}']`);
  }

  private getIdpRowsStartingWith(idpNamePrefix: string): ChainableElement {
    return cy.get(`tr[data-idp-name^='${idpNamePrefix}']`);
  }

  getIdpUid(idpName: string): Cypress.Chainable<string> {
    return this.getIdpRow(idpName).invoke('attr', 'id');
  }

  navigateToUpdateIdpPage(idpName: string): void {
    this.getIdpRow(idpName).find('a.btn-action-update').click();
  }

  deleteIdp(idpName: string, user: OperatorUser): void {
    this.getIdpRow(idpName).find('button.btn-action-delete').first().click();
    const totpModal = new TotpModal();
    totpModal.submitTotp(user);
  }

  deleteAllIdpStartingWith(idpNamePrefix: string, user: OperatorUser): void {
    this.getIdpRowsStartingWith(idpNamePrefix).each(($idpRows) => {
      const idpName = $idpRows.attr('data-idp-name');
      this.deleteIdp(idpName, user);
    });
  }

  checkConfirmSuccessMessage(): void {
    cy.get('#successBanner').should('exist');
  }

  // TODO: the update confirmation message contains the idpTitle instead of idpName
  checkConfirmUpdateMessage(_idpName: string): void {
    cy.get('#successBanner')
      .should('exist')
      .invoke('text')
      .should(
        'match',
        /Le fournisseur d'identité .+ a été modifié avec succès !/,
      );
  }

  checkConfirmDeleteMessage(idpName: string): void {
    cy.get('#successBanner')
      .should('exist')
      .contains(
        `Le fournisseur d'identité ${idpName} a été supprimé avec succès !`,
      );
  }

  checkConfirmCreateMessage(idpName: string): void {
    cy.get('#successBanner')
      .should('exist')
      .contains(
        `Le fournisseur d'identité ${idpName} a été créé avec succès !`,
      );
  }
}
