import { Given, Then, When } from '@badeball/cypress-cucumber-preprocessor';

import {
  checkFCBasicAuthorization,
  isUsingFCBasicAuthorization,
  navigateTo,
} from '../../common/helpers';
import { Environment } from '../../common/types';
import { getOperatorUserByType } from '../helpers';
import ExploitLoginPage from '../pages/exploit-login-page';
import ExploitNavigation from '../pages/exploit-navigation';

let exploitLoginPage: ExploitLoginPage;
const exploitNavigation = new ExploitNavigation();

Given(
  /^je navigue sur la page login (d'exploitation|du support)$/,
  function (text: string) {
    const isExploitationApp = text === "d'exploitation";
    const {
      allAppsUrl,
      exploitAppId,
      exploitRootUrl,
      supportAppId,
      supportRootUrl,
    }: Environment = this.env;
    const rootUrl = isExploitationApp ? exploitRootUrl : supportRootUrl;
    const appId = isExploitationApp ? exploitAppId : supportAppId;
    exploitLoginPage = new ExploitLoginPage(rootUrl);
    navigateTo({ appId, baseUrl: allAppsUrl });
    if (isUsingFCBasicAuthorization()) {
      checkFCBasicAuthorization();
    }
  },
);

When(
  /^je me connecte (?:à exploitation|au support) en tant que "([^"]*)"$/,
  function (userType: string) {
    this.operatorUser = getOperatorUserByType(userType);
    exploitLoginPage.login(this.operatorUser);
  },
);

When(/^je me déconnecte (?:d'exploitation|du support)$/, function () {
  exploitNavigation.logout();
});

Then("je m'assure d'avoir quitté le service d'exploitation", function () {
  exploitNavigation.logout();
});

Then(
  /^je suis redirigé vers la page login (?:d'exploitation|du support)$/,
  function () {
    exploitLoginPage.checkIsVisible();
  },
);
