<!DOCTYPE html>
<html lang="fr">
  <head>
    <%- include('includes/head') %>
    <title><%= locals.titleFront %></title>
  </head>
  <body>
    <header>
      <%- include('includes/menu') %>
      <section class="welcome">
        <div class="container text-center">
          <h1>Bienvenue sur le démonstrateur de fournisseur de service FCP</h1>
        </div>
      </section>
    </header>

    <main class="container">
      <div class="text-center text-danger">
        Vous devez vous authentifier afin d'accéder à vos données personnelles.
      </div>

      <form id="scopes">
        <h2>Scopes</h2>
        <% locals.params.scope.split(' ').forEach(elem => { %>
          <div class="scope-input-wrapper">
            <input
              id="scope_<%=elem%>"
              type="checkbox"
              name="selected-scope"
              value="<%=elem%>"
              checked
              onChange="updateScope()"
              <%= (elem === 'openid' ? 'disabled' : '') %>
            />
            <label for="scope_<%=elem%>"><%=elem%></label>
          </div>
        <% }) %>

        <h2>Claims</h2>
        <% ['amr'].forEach(elem => { %>
          <div class="claim-input-wrapper">
            <input
              id="claim_<%=elem%>"
              type="checkbox"
              name="selected-claim"
              value="<%=elem%>"
              checked
              onChange="updateClaim()"
            />
            <label for="claim_<%=elem%>"><%=elem%></label>
          </div>
        <% }) %>

        <h2>ACR</h2>
        <select name="acr" id="acrSelector" aria-label="ACR Value" onChange="updateAcr()">
          <% ['eidas1', 'eidas2', 'eidas3'].forEach(acr => { %>
            <option value="<%=acr%>" <%= (locals.defaultAcrValue && locals.defaultAcrValue === acr) ? "selected" : "" %>><%=acr%></option>
          <% }) %>
        </select>
        <h2>Prompt <input
          id="prompt_toggle"
          type="checkbox"
          name="activate-prompt"
          onChange="togglePrompt()"
          checked
        /></h2>
        <% ['login', 'consent', 'none', 'select_account'].forEach(elem => { %>
          <div class="prompt-input-wrapper">
            <input
              id="prompt_<%=elem%>"
              type="checkbox"
              name="selected-prompt"
              value="<%=elem%>"
              onChange="updatePrompt()"
              <%= ((locals.params.prompt || []).includes(elem) ? 'checked' : '') %>
            />
            <label for="prompt_<%=elem%>"><%=elem%></label>
          </div>
        <% }) %>
      </form>

      <form id="authorizeForm" action="<%=locals.params.authorization_endpoint;%>" method="get">
        <section class="connect bg-light">
          <h2>Connectez-vous via FranceConnect</h2>
          
          <div class="form-group row">
            <label class="col-2 col-form-label" for="httpMethod">Http Method : </label>
            <div class="col-10">
              <select id="httpMethod" onChange="changeHttpMethod();">
                <option value="get" selected>GET</option>
                <option value="post">POST</option>
              </select>
            </div>
          </div>
          <div class="form-group row">
            <label class="col-2 col-form-label" for="scope"> Scopes : </label>
            <div class="col-10">
              <input id="scope" name="scope" type="text" value="" class="form-control" />
            </div>
          </div>
          <div class="form-group row">
            <label class="col-2 col-form-label" for="acrValues"> ACR values : </label>
            <div class="col-10">
              <input id="acrValues" name="acr_values" type="text" value="" class="form-control" />
            </div>
          </div>
          <div class="form-group row">
            <label class="col-2 col-form-label" for="claims"> Claims : </label>
            <div class="col-10">
              <input id="claims" name="claims" type="text" value="" class="form-control" />
            </div>
          </div>

          <div class="form-group row">
            <label class="col-2 col-form-label" for="claims"> Prompt : </label>
            <div class="col-10">
              <input id="prompt" name="prompt" type="text" value="" class="form-control" />
            </div>
          </div>

          <div class="form-group row">
            <label class="col-2 col-form-label" for="claims"> IDP Hint : </label>
            <div class="col-10">
              <input id="idp_hint" name="idp_hint" type="text" value="" class="form-control" />
            </div>
          </div>

          <div class="btn d-flex justify-content-center">
            <button
              id="call-authorize-button"
              type="submit"
              class="btn no-pad hidden-btn"
              aria-label="Connexion à FranceConnect"
            ></button>
          </div>
        </section>

        <section id="moreOptions" class="connect bg-light">
          <h3>Options avancées</h3>

          <div class="form-group row">
            <label class="col-2 col-form-label" for="clientId"> Client Id : </label>
            <div class="col-10">
              <input id="clientId" type="text" name="client_id" value="<%=locals.params.client_id;%>" class="form-control" />
            </div>
          </div>
          <div class="form-group row">
            <label class="col-2 col-form-label" for="redirectUri"> Redirect URI : </label>
            <div class="col-10">
              <input id="redirectUri" type="text" name="redirect_uri" value="<%=locals.params.redirect_uri;%>" class="form-control" />
            </div>
          </div>
          <input type="hidden" name="response_type" value="code" />
          <input type="hidden" name="state" value="<%=locals.params.state;%>" />
          <input type="hidden" name="nonce" value="<%=locals.params.nonce;%>" />
        </section>
      </form>
    </main>

    <%- include('includes/footer') %>
    <script>
      function getScopes() {
        const selectedScopes = [];
        document
          .querySelectorAll('input[name="selected-scope"]:checked')
          .forEach((elem) => selectedScopes.push(elem.value));

        return selectedScopes.join(' ');
      }

      function updateScope() {
        const scope = getScopes();
        document.getElementById('scope').value = scope;
      }

      function transformClaimsToJsonString (claims) {
        const values = claims.reduce((acc, key) => ({ ...acc, [key]: { essential: true }}), {});
        const json = JSON.stringify({ id_token: values });
        return json;
      }

      function getClaims() {
        const selector = 'input[name="selected-claim"]:checked';
        const elements = [...document.querySelectorAll(selector)];
        return elements.map(elem => elem.value);
      }

      function updateClaim() {
        const claims = getClaims();
        const claimsAreValid = claims && claims.length > 0;
        const json = !claimsAreValid ? '' : transformClaimsToJsonString(claims);
        document.getElementById('claims').value = json;
      }

      function togglePrompt(){
        const selector = 'input[name="activate-prompt"]'
        const toggle = document.querySelector(selector);
        const prompt = document.getElementById('prompt')
        prompt.disabled = !toggle.checked
      }

      function getPrompt() {
        const selector = 'input[name="selected-prompt"]:checked';
        const elements = [...document.querySelectorAll(selector)];
        return elements.map(elem => elem.value);
      }

      function updatePrompt() {
        const prompt = getPrompt();
        const promptAreValid = prompt && prompt.length > 0;
        document.getElementById('prompt').value = promptAreValid ? prompt.join(' '): '';
      }

      function updateAcr() {
        const acr = document.getElementById('acrSelector').value;
        document.getElementById('acrValues').value = acr;
      }

      function changeHttpMethod() {
        const httpMethod = document.getElementById('httpMethod').value;
        document.forms['authorizeForm'].method = httpMethod;
      }

      updateAcr();
      updateClaim();
      updateScope();
      updatePrompt();
    </script>
  </body>
</html>
