version: "2.4"

####################
####################
services:
  all:
    image: alpine
    depends_on:
      - "rp-all"
      - "all-fcp-high"
      - "all-fca-low"
      - "all-fcp-low"

  ####################
  # Shared Services
  ####################

  rp-all:
    image: nginx:1.14.2
    container_name: fc-rp-all
    environment:
      DHPARAM_GENERATION: "false"
    depends_on:
      - docker-gen
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${VOLUMES_DIR}/nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${VOLUMES_DIR}/nginx-proxy/etc:/etc/nginx/conf.d:ro
      - ${VOLUMES_DIR}/nginx-proxy/includes:/etc/nginx/includes:ro
      - ${VOLUMES_DIR}/nginx-proxy/public:/var/www:ro
      - ${VOLUMES_DIR}/nginx-proxy/default-vhost:/etc/nginx/html:ro
      - ${VOLUMES_DIR}/ssl:/etc/nginx/docker_host:ro
      - ${VOLUMES_DIR}/ssl:/etc/nginx/client_certs:ro
    networks:
      public:
        aliases:
          # FCP HIGH
          - fsp1-high.docker.dev-franceconnect.fr
          - fsp2-high.docker.dev-franceconnect.fr
          - fsp3-high.docker.dev-franceconnect.fr
          - fsp5-high.docker.dev-franceconnect.fr
          - fsp6-high.docker.dev-franceconnect.fr
          - rnipp.docker.dev-franceconnect.fr
          - ud-back.docker.dev-franceconnect.fr
          - ud-front.docker.dev-franceconnect.fr
          - core-fcp-high.docker.dev-franceconnect.fr
          - fip1-high.docker.dev-franceconnect.fr
          - fip2-high.docker.dev-franceconnect.fr
          - fip6-high.docker.dev-franceconnect.fr
          - fip13-high.docker.dev-franceconnect.fr
          - fip14-high.docker.dev-franceconnect.fr
          - fip15-high.docker.dev-franceconnect.fr
          - fip16-high.docker.dev-franceconnect.fr
          - fip17-high.docker.dev-franceconnect.fr
          - fip18-high.docker.dev-franceconnect.fr
          - fip19-high.docker.dev-franceconnect.fr
          - fip20-high.docker.dev-franceconnect.fr
          # FCP LOW
          - core-fcp-low.docker.dev-franceconnect.fr
          - fsp1-low.docker.dev-franceconnect.fr
          - fsp2-low.docker.dev-franceconnect.fr
          - fsp3-low.docker.dev-franceconnect.fr
          - fsp4-low.docker.dev-franceconnect.fr
          - fip1-low.docker.dev-franceconnect.fr
          - fip2-low.docker.dev-franceconnect.fr
          - fip3-low.docker.dev-franceconnect.fr
          - fip4-low.docker.dev-franceconnect.fr
          - fip8-low.docker.dev-franceconnect.fr
          - fip9-low.docker.dev-franceconnect.fr
          # FCA LOW
          - core-fca-low.docker.dev-franceconnect.fr
          - bridge-proxy-rie.docker.dev-franceconnect.fr
          - fca-low-front.docker.dev-franceconnect.fr
          - fsa1-low.docker.dev-franceconnect.fr
          - fsa2-low.docker.dev-franceconnect.fr
          - fsa3-low.docker.dev-franceconnect.fr
          - fsa4-low.docker.dev-franceconnect.fr
          - fsa5-low.docker.dev-franceconnect.fr
          - fia1-low.docker.dev-franceconnect.fr
          - fia2-low.docker.dev-franceconnect.fr
          - fia4-low.docker.dev-franceconnect.fr
          - fia5-low.docker.dev-franceconnect.fr
          - fia8-low.docker.dev-franceconnect.fr
          - moncomptepro.docker.dev-franceconnect.fr
          # EIDAS
          - eidas-bridge.docker.dev-franceconnect.fr
          - eidas-fr.docker.dev-franceconnect.fr
          - eidas-mock.docker.dev-franceconnect.fr
          - eidas-be.docker.dev-franceconnect.fr
          # Partners
          - partners-fcp.docker.dev-franceconnect.fr
          - partners-fca.docker.dev-franceconnect.fr
          # Aliases to access exploitation from test runner
          # TODO: Move those aliases to exploitation network once runner workaround found
          - exploitation-fca-low.docker.dev-franceconnect.fr
          - exploitation-high.docker.dev-franceconnect.fr
          # Usagers FCA
          - usagers-fca.docker.dev-franceconnect.fr
          # Mock RNIPP
          - mock-rnipp.docker.dev-franceconnect.fr
          # Mock Data Provider
          - dp1-high.docker.dev-franceconnect.fr
          - dp2-high.docker.dev-franceconnect.fr
          - dp1-low.docker.dev-franceconnect.fr
          - dp2-low.docker.dev-franceconnect.fr
          # Storybook
          - storybook.docker.dev-franceconnect.fr
          # Generic
          - docker.dev-franceconnect.fr
          #Â Stack Legacy
          - fcp.docker.dev-franceconnect.fr
          - fip1.docker.dev-franceconnect.fr
          - fip2.docker.dev-franceconnect.fr
          - fip3.docker.dev-franceconnect.fr
          - fip4.docker.dev-franceconnect.fr
          - aidants-connect-mock.docker.dev-franceconnect.fr
          - fi-beta-mock.docker.dev-franceconnect.fr
          - fsp1.docker.dev-franceconnect.fr
          - fsp2.docker.dev-franceconnect.fr
          - fsp3.docker.dev-franceconnect.fr
          - fdp1.docker.dev-franceconnect.fr
          - assets.docker.dev-franceconnect.fr
          - fc-exploitation.docker.dev-franceconnect.fr
          - fc-support.docker.dev-franceconnect.fr
          - tracks-data-provider.docker.dev-franceconnect.fr
          - ud.docker.dev-franceconnect.fr
          - maildev.docker.dev-franceconnect.fr
          - partenaires.docker.dev-franceconnect.fr
      fc:
      rie:
        aliases:
          - auth.llng.docker.dev-franceconnect.fr
          - fia-rie-low.docker.dev-franceconnect.fr
      exploitation:
        aliases:
          - exploit-fcp-high.docker.dev-franceconnect.fr
          - exploit-fca-low.docker.dev-franceconnect.fr
          - exploit-fcp-high-fi-mock.docker.dev-franceconnect.fr
          - exploit-fca-low-fi-mock.docker.dev-franceconnect.fr

  docker-gen:
    user: ${CURRENT_UID}
    image: jwilder/docker-gen
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${VOLUMES_DIR}/nginx-proxy/default-vhost:/etc/nginx/html
      - ${VOLUMES_DIR}/nginx-proxy/etc:/etc/nginx/conf.d
      - ${VOLUMES_DIR}/docker-gen/config:/etc/docker-gen/config:ro
      - ${VOLUMES_DIR}/nginx-proxy/templates:/etc/docker-gen/templates:ro
    networks:
      - public
      - fc
      - exploitation
      - rie
    command: -config /etc/docker-gen/config

  squid:
    image: ${FC_DOCKER_REGISTRY}/squid:4.6
    extra_hosts:
      - auth.llng.docker.dev-franceconnect.fr:172.16.1.254
      - fia-rie-low.docker.dev-franceconnect.fr:172.16.1.254
    networks:
      - public
      - fc
      - exploitation
      - rie

  haproxy:
    image: haproxy:2.3
    hostname: haproxy
    ports:
      - 8404:8404
    volumes:
      - "${VOLUMES_DIR}/haproxy:/usr/local/etc/haproxy:ro"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    networks:
      - public
      - fc
      - exploitation
    depends_on:
      - rp-all

  broker:
    build:
      context: "${WORKING_DIR}"
      dockerfile: "${WORKING_DIR}/builds/broker/Dockerfile"
    # Specify hostname to fix cluster name
    hostname: broker
    depends_on:
      - "squid"
    networks:
      - data
    ports:
      - "5672:5672"
      - "15672:15672"

  ####################
  # Data storage
  ####################

  redis-pwd:
    image: "bitnami/redis:6.0.15"
    env_file:
      - ${COMPOSE_DIR}/shared/.env/redis.env
    environment:
      - REDIS_TLS_CERT_FILE=/bitnami/redis/data/ssl/redis-pwd.crt
      - REDIS_TLS_KEY_FILE=/bitnami/redis/data/ssl/redis-pwd.key
    volumes:
      - "${VOLUMES_DIR}/ssl:/bitnami/redis/data/ssl"
    healthcheck:
      test: redis-c-li -a $${REDIS_PASSWORD} --tls --cacert $${REDIS_TLS_CA_FILE} role | grep master
      interval: 2s
      start_period: 5s
    networks:
      rie:
      data:
        ipv4_address: 172.16.4.105

  redis-cluster-master:
    image: "bitnami/redis:6.0.15"
    env_file:
      - ${COMPOSE_DIR}/shared/.env/redis.env
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - "${VOLUMES_DIR}/ssl:/bitnami/redis/data/ssl"
    healthcheck:
      test: redis-cli -a $${REDIS_PASSWORD} --tls --cacert $${REDIS_TLS_CA_FILE} role | grep master
      interval: 2s
      start_period: 5s
    networks:
      data:
        ipv4_address: 172.16.4.100

  redis-cluster-replica:
    image: "bitnami/redis:6.0.15"
    env_file:
      - ${COMPOSE_DIR}/shared/.env/redis.env
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-cluster-master
      - REDIS_MASTER_PORT_NUMBER=6379
    volumes:
      - "${VOLUMES_DIR}/ssl:/bitnami/redis/data/ssl"
    healthcheck:
      test: redis-cli -a $${REDIS_PASSWORD} --tls --cacert $${REDIS_TLS_CA_FILE} role | grep slave
      interval: 2s
      start_period: 5s
    depends_on:
      - redis-cluster-master
    networks:
      data:
        ipv4_address: 172.16.4.101

  redis-sentinel:
    image: "bitnami/redis-sentinel:6.0.15"
    scale: 3
    env_file:
      - ${COMPOSE_DIR}/shared/.env/redis.env
    environment:
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_MASTER_SET=fc_core_v2
      - REDIS_MASTER_HOST=redis-cluster-master
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=1000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=2000
      - REDIS_SENTINEL_TLS_ENABLED=true
      - REDIS_SENTINEL_TLS_PORT=26379
      - REDIS_SENTINEL_TLS_CERT_FILE=/bitnami/redis/data/ssl/redis.crt
      - REDIS_SENTINEL_TLS_KEY_FILE=/bitnami/redis/data/ssl/redis.key
      - REDIS_SENTINEL_TLS_CA_FILE=/bitnami/redis/data/ssl/docker-stack-ca.crt
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    volumes:
      - "${VOLUMES_DIR}/ssl:/bitnami/redis/data/ssl"
    healthcheck:
      test: redis-cli -p 26379 --tls --cacert $${REDIS_SENTINEL_TLS_CA_FILE} ping
      interval: 2s
      start_period: 5s
    depends_on:
      - redis-cluster-master
      - redis-cluster-replica
    networks:
      - data

  postgres:
    # OPS have access to only v11 atm on debian
    image: postgres:11-buster
    volumes:
      - "${VOLUMES_DIR}/postgres/init-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/init-multiple-postgresql-databases.sh:ro"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/postgres/base.env"
      - "${COMPOSE_DIR}/shared/.env/postgres/databases.env"
    ports:
      - "5432:5432"
    networks:
      - data

  mongo-fcp-high:
    hostname: mongo-fcp-high
    build:
      context: "${WORKING_DIR}"
      dockerfile: "${WORKING_DIR}/builds/mongodb/Dockerfile"
      args:
        MONGO_VERSION: "4.4"
    volumes:
      - "${VOLUMES_DIR}/mongo-fcp-high/scripts:/opt/scripts"
      - "${VOLUMES_DIR}/mongo-fcp-high/initdb.d:/docker-entrypoint-initdb.d"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/mongo-high.env"
    ports:
      - "27018:27017"
    networks:
      - data

  ####################
  # HSM
  ####################

  hsm:
    image: ${FC_DOCKER_REGISTRY}/softhsm
    networks:
      - data
    ports:
      - "5551:5551"

  csmr-hsm:
    hostname: csmr-hsm
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    depends_on:
      - "broker"
      - "hsm"
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/csmr-hsm:/etc/hsm"
      - "${VOLUMES_DIR}/log/:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - ${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
    environment:
      - "PM2_SCRIPT=yarn start csmr-hsm-high"
      - "PM2_CI_SCRIPT=yarn start csmr-hsm-high"
      - "REQUEST_TIMEOUT=6000"
      # Logger
      - "Logger_FILE=/var/log/app/csmr-hsm.log"
      # Hsm
      - "PROTECCIO_CONF_DIR=/etc/hsm"
      - "HSM_HOST=hsm"
      # Locale PKCS11 library
      #   Use libpkcs11-proxy lib for development HSM (softHSM)
      #   Use Bull's library for production HSM
      #
      # - "HSM_LIB=/etc/hsm/libnethsm.so"
      - "Hsm_LIB=/etc/hsm/libpkcs11-proxy.so"
      - "Hsm_PIN=1234"
      - "Hsm_VIRTUAL_HSM_SLOT=0"
      - "Hsm_SIG_HSM_PUB_KEY_CKA_LABEL=key-prime256v1"
      - "PKCS11_PROXY_SOCKET=tcp://hsm:5551"
      - 'CryptographyBroker_URLS=["amqp://broker:5672"]'
      - "CryptographyBroker_QUEUE=crypto"
    networks:
      - data
    command: "pm2 logs"

  ####################
  # Shared Mocks
  ####################

  openldap:
    image: ${FC_DOCKER_REGISTRY}/openldap:0.2
    networks:
      - rie

  maildev:
    hostname: maildev
    image: maildev/maildev:2.0.5
    environment:
      - "VIRTUAL_HOST=maildev.docker.dev-franceconnect.fr"
      - "VIRTUAL_PORT=1080"
    networks:
      - data
      - public

  # New implementation in monorepo
  mock-rnipp:
    hostname: mock-rnipp
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/log:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
      - "${COMPOSE_DIR}/shared/.env/mock-rnipp.env"
    ports:
      - "10300:3001"
    networks:
      - public
    command: "pm2 logs"

  # Old implementation in specific repo
  rnipp:
    hostname: rnipp
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    volumes:
      - "${VOLUMES_DIR}/src/rnipp-mock:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/.home:/home"
    environment:
      - "VIRTUAL_HOST=rnipp.docker.dev-franceconnect.fr"
      - "VIRTUAL_PORT=3000"
      - "NODE_ENV=development"
      - "PORT=3000"
      - "PM2_SCRIPT=index.js"
      - "PM2_CI_SCRIPT=index.js"
      - "PM2_CWD=/var/www/app/src"
      - "HOME=/home"
      - "PM2_HOME=/tmp/.pm2"
      - "TZ=Europe/Paris"
    networks:
      - public
    command: "tail -f /dev/null"

  ####################
  # Tracks related services
  ####################

  elasticsearch:
    image: elasticsearch:7.17.9
    volumes:
      - "${VOLUMES_DIR}/elasticsearch/data:/usr/share/elasticsearch/data"
      - "${VOLUMES_DIR}/elasticsearch/config/users:/usr/share/elasticsearch/config/users:ro"
      - "${VOLUMES_DIR}/elasticsearch/config/users_roles:/usr/share/elasticsearch/config/users_roles:ro"
      - "${VOLUMES_DIR}/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro"
      - "${VOLUMES_DIR}/elasticsearch/config/elasticsearch.crt:/usr/share/elasticsearch/config/elasticsearch.crt:ro"
      - "${VOLUMES_DIR}/elasticsearch/config/elasticsearch.key:/usr/share/elasticsearch/config/elasticsearch.key:ro"
      - "${VOLUMES_DIR}/elasticsearch/index/:/index"
      - "${VOLUMES_DIR}/elasticsearch/ingest_pipelines:/ingest_pipelines"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    networks:
      - data
      - public
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms64m -Xmx256m"

  tracks-data-provider:
    hostname: tracks-data-provider
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    depends_on:
      - "squid"
      - "fc-core"
      - "csmr-tracks"
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/log/:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
      - "${COMPOSE_DIR}/shared/.env/tracks-data-provider.env"
    networks:
      - public
      - data
    ports:
      - "3092:3092"
    command: "pm2 logs"

  csmr-tracks:
    hostname: csmr-tracks
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    depends_on:
      - "broker"
      - "csmr-account-legacy"
      - "csmr-account-high"
      - "elasticsearch"
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/log:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
      - "${VOLUMES_DIR}/maxmind/database/GeoLite2-City:/var/geoipdb"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
      - "${COMPOSE_DIR}/shared/.env/csmr-tracks.env"
    ports:
      - 10253:10253
    environment:
      - "NODE_TLS_REJECT_UNAUTHORIZED=0"
      - "PM2_SCRIPT=yarn start:dev --debug=0.0.0.0:10253 csmr-tracks-instance"
      - "PM2_CI_SCRIPT=yarn start:ci csmr-tracks-instance"
      - "REQUEST_TIMEOUT=6000"
      # -- Logger
      - "Logger_FILE=/var/log/app/csmr-tracks.log"
      - "Logger_LEVEL=trace"
      # -- RabbitMQ credentials
      - 'TracksBroker_URLS=["amqp://broker:5672"]'
      - "TracksBroker_QUEUE=tracks"
      - 'AccountHighBroker_URLS=["amqp://broker:5672"]'
      - "AccountHighBroker_QUEUE=account-high"
      - 'AccountLegacyBroker_URLS=["amqp://broker:5672"]'
      - "AccountLegacyBroker_QUEUE=account-legacy"
      - "FC_DB_TYPE=mongodb"
      - "FC_DB_SYNCHRONIZE=false"
      - "FC_DB_CONNECT_OPTIONS="
      - "FC_DB_REPLICASET=rs0"
        # Elasticsearch credentials
      - "Elasticsearch_TRACKS_INDEX=tracks"
      - 'Elasticsearch_NODES=["https://elasticsearch:9200"]'
      - "Elasticsearch_USERNAME=docker-stack"
      - "Elasticsearch_PASSWORD=docker-stack"
        # GeoIP
      - "GeoIpMaxmind_DATABASE_PATH=/var/geoipdb/GeoLite2-City.mmdb"
    networks:
      - data
    command: "pm2 logs"

  csmr-account-legacy:
    hostname: csmr-account-legacy
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    depends_on:
      - "broker"
      - "mongo-fcp-low"
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/log:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
      - "${COMPOSE_DIR}/fcp-low/.env/mongo-fcp-low.env"
    ports:
      - 10254:10254
    environment:
      - "PM2_SCRIPT=yarn start:dev --debug=0.0.0.0:10254 csmr-account-instance"
      - "PM2_CI_SCRIPT=yarn start:ci csmr-account-instance"
      - "REQUEST_TIMEOUT=6000"
      # -- Logger
      - "Logger_FILE=/var/log/app/csmr-account-legacy.log"
      - "Logger_LEVEL=trace"
      # -- RabbitMQ credentials
      - 'AccountBroker_URLS=["amqp://broker:5672"]'
      - "AccountBroker_QUEUE=account-legacy"
    networks:
      - data
    command: "pm2 logs"

  csmr-account-high:
    hostname: csmr-account-high
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    working_dir: /var/www/app
    depends_on:
      - "broker"
      - "mongo-fcp-high"
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/log:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
      - "${COMPOSE_DIR}/shared/.env/mongo-high.env"
    ports:
      - 10255:10255
    environment:
      - "PM2_SCRIPT=yarn start:dev --debug=0.0.0.0:10255 csmr-account-instance"
      - "PM2_CI_SCRIPT=yarn start:ci csmr-account-instance"
      - "REQUEST_TIMEOUT=6000"
      # -- Logger
      - "Logger_FILE=/var/log/app/csmr-account-high.log"
      - "Logger_LEVEL=trace"
      # -- RabbitMQ credentials
      - 'AccountBroker_URLS=["amqp://broker:5672"]'
      - "AccountBroker_QUEUE=account-high"
    networks:
      - data
    command: "pm2 logs"

  csmr-user-preferences-high:
    hostname: csmr-user-preferences-high
    image: ${FC_DOCKER_REGISTRY}/nodejs:${NODE_VERSION}-dev
    user: ${CURRENT_UID}
    depends_on:
      - "broker"
      - "mongo-fcp-low"
    working_dir: /var/www/app
    volumes:
      - "${VOLUMES_DIR}/src/fc/back:/var/www/app"
      - "${VOLUMES_DIR}/app:/opt/scripts"
      - "${VOLUMES_DIR}/log:/var/log/app"
      - "${VOLUMES_DIR}/.home:/home"
      - "${VOLUMES_DIR}/ssl:/etc/ssl/docker_host:ro"
    env_file:
      - "${COMPOSE_DIR}/shared/.env/base-app.env"
      - "${COMPOSE_DIR}/shared/.env/csmr-user-preferences-high.env"
      - "${COMPOSE_DIR}/fcp-low/.env/mongo-fcp-low.env"
    tty: true
    ports:
      - 9600:9600
    networks:
      - data
    command: "pm2 logs"

####################
# Networks
####################

networks:
  public:
    ipam:
      config:
        - subnet: 172.16.1.0/24
  fc:
    ipam:
      config:
        - subnet: 172.16.2.0/24
  exploitation:
    ipam:
      config:
        - subnet: 172.16.3.0/24
  data:
    ipam:
      config:
        - subnet: 172.16.4.0/24
  eidas:
    ipam:
      config:
        - subnet: 172.16.5.0/24
  rie:
    ipam:
      config:
        - subnet: 172.16.6.0/24
